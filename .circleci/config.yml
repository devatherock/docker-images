docker_auth: &docker_auth
  auth:
    username: $DOCKER_USERNAME
    password: $DOCKER_PASSWORD

slack_image: &slack_image
  docker:
    - image: devatherock/simple-slack:1.0.0
      <<: *docker_auth

work_directory: &work_directory
  working_directory: ~/docker-images

resource_class: &resource_class
  resource_class: small

pr_filter: &pr_filter
  filters:
    branches:
      ignore: master

merge_filter: &merge_filter
  filters:
    branches:
      only: master

executors:
  docker-executor:
    docker:
      - image: cimg/openjdk:17.0
        <<: *docker_auth
    <<: *resource_class
    <<: *work_directory
  arm-executor:
    machine:
      image: ubuntu-2004:2022.04.1
    resource_class: arm.medium
    <<: *work_directory

version: 2.1
jobs:
  dry_run:
    parameters:
      command_args:
        type: string
      runner:
        type: executor
      init_command:
        type: string
    executor: << parameters.runner >>
    steps:
      - checkout
      - << parameters.init_command >>
      - run: docker build << parameters.command_args >>

  dry_run_multiarch:
    parameters:
      command_args:
        type: string
    executor: docker-executor
    steps:
      - checkout
      - setup_remote_docker
      - run: |
          docker buildx create --name rockbuilder \
            --driver docker-container --use --bootstrap
          docker buildx build \
            --platform linux/amd64,linux/arm64 << parameters.command_args >>

  publish:
    parameters:
      command_args:
        type: string
      docker_tag:
        type: string
      docker_image:
        type: string
      runner:
        type: executor
      init_command:
        type: string
    executor: << parameters.runner >>
    steps:
      - checkout
      - << parameters.init_command >>
      - attach_workspace:
          at: ~/docker-images
      - run: |
          TAG=<< parameters.docker_tag >>
          echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
          docker build -t devatherock/<< parameters.docker_image >>:$TAG << parameters.command_args >>
          docker push devatherock/<< parameters.docker_image >>:$TAG

  publish_multiarch:
    parameters:
      command_args:
        type: string
      docker_tag:
        type: string
      docker_image:
        type: string
    executor: docker-executor
    steps:
      - checkout
      - setup_remote_docker
      - attach_workspace:
          at: ~/docker-images
      - run: |
          TAG=<< parameters.docker_tag >>
          echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
          docker buildx create --name rockbuilder \
            --driver docker-container --use --bootstrap
          docker buildx build \
            --platform linux/amd64,linux/arm64 \
            --push \
            -t devatherock/<< parameters.docker_image >>:$TAG \
            << parameters.command_args >>

  test:
    parameters:
      command_args:
        type: string
      docker_tag:
        type: string
      docker_image:
        type: string
      runner:
        type: executor
      init_command:
        type: string
    executor: << parameters.runner >>
    steps:
      - << parameters.init_command >>
      - attach_workspace:
          at: ~/docker-images
      - run: |
          echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
          docker run --rm \
              --entrypoint='' \
              -t devatherock/<< parameters.docker_image >>:<< parameters.docker_tag >> << parameters.command_args >>

  dockerhub_readme:
    parameters:
      docker_image:
        type: string
      image_description:
        type: string
      readme_path:
        type: string
    docker:
      - image: peterevans/dockerhub-description:3.4.2
        <<: *docker_auth
    <<: *resource_class
    <<: *work_directory
    environment:
      DOCKERHUB_REPOSITORY: 'devatherock/<< parameters.docker_image >>'
      SHORT_DESCRIPTION: '<< parameters.image_description >>'
      README_FILEPATH: '<< parameters.readme_path >>'
    steps:
      - checkout
      - attach_workspace:
          at: ~/docker-images
      - run: |
          sh /entrypoint.sh

  notify:
    <<: *slack_image
    <<: *resource_class
    environment:
      TEXT: "Success: {{.CircleBuildUrl}} by {{.CircleUsername}}"
      COLOR: "#33ad7f"
      CHANNEL: general
      TITLE: "Build completed"
    steps:
      - run: /bin/simpleslack

workflows:
  version: 2.1
  build_publish:
    jobs:
      - publish_multiarch:
          name: graalvm_java17
          context:
            - docker-credentials
          command_args: '--build-arg BASE_IMAGE_VERSION=ol8-java17-22.3.2 -f graalvm/Dockerfile .'
          docker_image: 'graalvm'
          docker_tag: 'ol8-java17-22.3.2-5'
          <<: *merge_filter
      - publish_multiarch:
          name: graalvm_java11
          context:
            - docker-credentials
          command_args: '--build-arg BASE_IMAGE_VERSION=ol8-java11-22.3.2 -f graalvm/Dockerfile .'
          docker_image: 'graalvm'
          docker_tag: 'ol8-java11-22.3.2-4'
          <<: *merge_filter
      - publish_multiarch:
          name: graalvm_22_1
          context:
            - docker-credentials
          command_args: '--build-arg BASE_IMAGE_VERSION=ol8-java17-22.1.0 -f graalvm/Dockerfile .'
          docker_image: 'graalvm'
          docker_tag: 'ol8-java17-22.1.0-5'
          <<: *merge_filter
      - publish:
          name: nexmo_oas_renderer
          context:
            - docker-credentials
          command_args: 'nexmo-oas-renderer'
          docker_image: 'nexmo-oas-renderer'
          docker_tag: '2.4.1-2'
          runner: docker-executor
          init_command: 'setup_remote_docker'
          <<: *merge_filter
      - publish:
          name: nexmo_oas_renderer_arm
          context:
            - docker-credentials
          command_args: 'nexmo-oas-renderer'
          docker_image: 'nexmo-oas-renderer'
          docker_tag: '2.4.1-2-arm64'
          runner: arm-executor
          init_command: 'checkout'
          <<: *merge_filter
      - dockerhub_readme:
          name: dockerhub_readme_graalvm
          context:
            - docker-credentials
            - dockerhub-readme-credentials
          docker_image: 'graalvm'
          image_description: 'A docker image containing graalvm, native-image, tar, xz, gzip and upx'
          readme_path: 'graalvm/README.md'
          requires:
            - graalvm_22_1
      - dockerhub_readme:
          name: dockerhub_readme_nexmo_oas_renderer
          context:
            - docker-credentials
            - dockerhub-readme-credentials
          docker_image: 'nexmo-oas-renderer'
          image_description: 'Customized nexmo-oas-renderer image that can visualize yaml api specs from a git repo'
          readme_path: 'nexmo-oas-renderer/README.md'
          requires:
            - nexmo_oas_renderer_arm
      - test:
          name: test_graalvm_java11_amd
          context:
            - docker-credentials
          command_args: 'sh -c "uname -m && upx -V"'
          docker_image: 'graalvm'
          docker_tag: 'ol8-java11-22.3.2-3'
          runner: docker-executor
          init_command: 'setup_remote_docker'
          requires:
            - graalvm_java11
      - test:
          name: test_graalvm_java11_arm
          context:
            - docker-credentials
          command_args: 'sh -c "uname -m && upx -V"'
          docker_image: 'graalvm'
          docker_tag: 'ol8-java11-22.3.2-3'
          runner: arm-executor
          init_command: 'checkout'
          requires:
            - graalvm_java11
      - notify:
          context:
            - docker-credentials
            - slack-webhook
          requires:
            - nexmo_oas_renderer
            - graalvm_java17
            - test_graalvm_java11_amd
            - test_graalvm_java11_arm
            - dockerhub_readme_graalvm
            - dockerhub_readme_nexmo_oas_renderer

  pr_check:
    jobs:
      - dry_run_multiarch:
          name: dry_run_graalvm_java17
          context:
            - docker-credentials
          <<: *pr_filter
          command_args: '--build-arg BASE_IMAGE_VERSION=ol8-java17-22.3.2 -f graalvm/Dockerfile .'
      - dry_run_multiarch:
          name: dry_run_graalvm_java11
          context:
            - docker-credentials
          <<: *pr_filter
          command_args: '--build-arg BASE_IMAGE_VERSION=ol8-java11-22.3.2 -f graalvm/Dockerfile .'
      - dry_run_multiarch:
          name: dry_run_graalvm_22_1
          context:
            - docker-credentials
          <<: *pr_filter
          command_args: '--build-arg BASE_IMAGE_VERSION=ol8-java17-22.1.0 -f graalvm/Dockerfile .'
      - dry_run:
          name: dry_run_nexmo_oas_renderer
          context:
            - docker-credentials
          <<: *pr_filter
          command_args: 'nexmo-oas-renderer'
          runner: docker-executor
          init_command: 'setup_remote_docker'
      - dry_run:
          name: dry_run_nexmo_oas_renderer_arm
          context:
            - docker-credentials
          <<: *pr_filter
          command_args: 'nexmo-oas-renderer'
          runner: arm-executor
          init_command: 'checkout'
