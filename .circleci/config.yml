slack_image: &slack_image
  docker:
    - image: devatherock/simple-slack:0.7.0
      auth:
          username: $DOCKER_USERNAME
          password: $DOCKER_PASSWORD

work_directory: &work_directory
  working_directory: ~/docker-images

resource_class: &resource_class
  resource_class: small
  
pr_filter: &pr_filter
  filters:
    branches:
      ignore: master
      
merge_filter: &merge_filter
  filters:
    branches:
      only: master
  
executors:
  docker-executor:
    docker:
      - image: docker:19.03.6
        auth:
          username: $DOCKER_USERNAME
          password: $DOCKER_PASSWORD
    <<: *resource_class
    <<: *work_directory

version: 2.1
jobs:
  dry_run:
    executor: docker-executor
    parameters:
      command_args:
        type: string
    steps:
      - checkout
      - setup_remote_docker
      - run: docker build << parameters.command_args >>

  publish:
    executor: docker-executor
    parameters:
      command_args:
        type: string
      docker_tag:
        type: string
      docker_image:
        type: string  
    steps:
      - checkout
      - setup_remote_docker
      - attach_workspace:
          at: ~/docker-images
      - run: |
          TAG=<< parameters.docker_tag >>
          docker build -t devatherock/<< parameters.docker_image >>:$TAG << parameters.command_args >>
          docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
          docker push devatherock/<< parameters.docker_image >>:$TAG

  notify:
    <<: *slack_image
    <<: *resource_class
    environment:
      TEXT: "Success: {{.CircleBuildUrl}} by {{.CircleUsername}}"
      COLOR: "#33ad7f"
      CHANNEL: general
      TITLE: "Build completed"
    steps:
      - run: /bin/simpleslack

workflows:
  version: 2.1
  build_publish:
    jobs:
      - publish:
          name: java_with_docker
          context:
            - docker-credentials
          command_args: '-f java-with-docker/Dockerfile .'
          docker_image: 'java-with-docker'
          docker_tag: 'adoptopenjdk-11'
          <<: *merge_filter
      - publish:
          name: graalvm_with_git
          context:
            - docker-credentials
          command_args: '--build-arg BASE_IMAGE_VERSION=ol8-java17-22.1.0 -f graalvm/Dockerfile .'
          docker_image: 'graalvm'
          docker_tag: 'ol8-java17-22.1.0-1'
          <<: *merge_filter
      - publish:
          name: nexmo_oas_renderer
          context:
            - docker-credentials
          command_args: 'nexmo-oas-renderer'
          docker_image: 'nexmo-oas-renderer'
          docker_tag: '2.4.1-2'
          <<: *merge_filter
      - notify:
          context:
            - docker-credentials
            - slack-webhook
          requires:
            - java_with_docker
            - graalvm_with_git
            - nexmo_oas_renderer
  
  pr_check:
    jobs:
      - dry_run:
          name: dry_run_java_with_docker
          context:
            - docker-credentials
          command_args: '-f java-with-docker/Dockerfile .'
          <<: *pr_filter
      - dry_run:
          name: dry_run_graalvm_with_git
          context:
            - docker-credentials
          <<: *pr_filter
          command_args: '--build-arg BASE_IMAGE_VERSION=ol8-java17-22.1.0 -f graalvm/Dockerfile .'
      - dry_run:
          name: dry_run_nexmo_oas_renderer
          context:
            - docker-credentials
          <<: *pr_filter
          command_args: 'nexmo-oas-renderer'