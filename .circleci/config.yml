slack_image: &slack_image
  docker:
    - image: devatherock/simple-slack:0.7.0
      auth:
          username: $DOCKER_USERNAME
          password: $DOCKER_PASSWORD

work_directory: &work_directory
  working_directory: ~/docker-images

resource_class: &resource_class
  resource_class: small
  
pr_filter: &pr_filter
  filters:
    branches:
      ignore: master
      
merge_filter: &merge_filter
  filters:
    branches:
      only: master
  
executors:
  docker-executor:
    docker:
      - image: cimg/openjdk:17.0
        auth:
          username: $DOCKER_USERNAME
          password: $DOCKER_PASSWORD
    <<: *resource_class
    <<: *work_directory
  arm-executor:
    machine:
      image: ubuntu-2004:2022.04.1
    resource_class: arm.medium
    <<: *work_directory

version: 2.1
jobs:
  dry_run:
    executor: docker-executor
    parameters:
      command_args:
        type: string
    steps:
      - checkout
      - setup_remote_docker
      - run: docker build << parameters.command_args >>
      
  dry_run_arm:
    executor: arm-executor
    parameters:
      command_args:
        type: string
    steps:
      - checkout
      - run: docker build << parameters.command_args >>      

  publish:
    executor: docker-executor
    parameters:
      command_args:
        type: string
      docker_tag:
        type: string
      docker_image:
        type: string  
    steps:
      - checkout
      - setup_remote_docker
      - attach_workspace:
          at: ~/docker-images
      - run: |
          TAG=<< parameters.docker_tag >>
          echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
          docker build -t devatherock/<< parameters.docker_image >>:$TAG << parameters.command_args >>
          docker push devatherock/<< parameters.docker_image >>:$TAG
          
  publish_arm:
    executor: arm-executor
    parameters:
      command_args:
        type: string
      docker_tag:
        type: string
      docker_image:
        type: string  
    steps:
      - checkout
      - attach_workspace:
          at: ~/docker-images
      - run: |
          TAG=<< parameters.docker_tag >>
          echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
          docker build -t devatherock/<< parameters.docker_image >>:$TAG << parameters.command_args >>
          docker push devatherock/<< parameters.docker_image >>:$TAG          
          
  dockerhub_readme:
    machine:
      image: ubuntu-2204:2023.04.2
    parameters:
      docker_image:
        type: string
      image_description:
        type: string
      readme_path:
        type: string
    steps:
      - checkout
      - run: |
          docker run -v $PWD:/workspace \
              -e DOCKERHUB_USERNAME \
              -e DOCKERHUB_PASSWORD \
              -e DOCKERHUB_REPOSITORY='devatherock/<< parameters.docker_image >>' \
              -e SHORT_DESCRIPTION='<< parameters.image_description >>' \
              -e README_FILEPATH='/workspace/<< parameters.readme_path >>' \
              peterevans/dockerhub-description:3.4.1          

  notify:
    <<: *slack_image
    <<: *resource_class
    environment:
      TEXT: "Success: {{.CircleBuildUrl}} by {{.CircleUsername}}"
      COLOR: "#33ad7f"
      CHANNEL: general
      TITLE: "Build completed"
    steps:
      - run: /bin/simpleslack

workflows:
  version: 2.1
  build_publish:
    jobs:
      - publish:
          name: graalvm
          context:
            - docker-credentials
          command_args: '--build-arg BASE_IMAGE_VERSION=ol8-java17-22.3.2 -f graalvm/Dockerfile .'
          docker_image: 'graalvm'
          docker_tag: 'ol8-java17-22.3.2-1'
          <<: *merge_filter
      - publish:
          name: nexmo_oas_renderer
          context:
            - docker-credentials
          command_args: 'nexmo-oas-renderer'
          docker_image: 'nexmo-oas-renderer'
          docker_tag: '2.4.1-2'
          <<: *merge_filter
      - publish_arm:
          name: graalvm_arm
          context:
            - docker-credentials
          command_args: '--build-arg BASE_IMAGE_VERSION=ol8-java17-22.3.2 -f graalvm/Dockerfile .'
          docker_image: 'graalvm'
          docker_tag: 'ol8-java17-22.3.2-1-arm64'
          <<: *merge_filter
      - publish_arm:
          name: nexmo_oas_renderer_arm
          context:
            - docker-credentials
          command_args: 'nexmo-oas-renderer'
          docker_image: 'nexmo-oas-renderer'
          docker_tag: '2.4.1-2-arm64'
          <<: *merge_filter
      - dockerhub_readme:
          name: dockerhub_readme_graalvm
          context:
            - docker-credentials
            - dockerhub-readme-credentials
          docker_image: 'graalvm'
          image_description: 'A docker image containing graalvm, native-image, tar, xz, gzip and upx'
          readme_path: 'graalvm/README.md'
          requires:
            - graalvm_arm
      - dockerhub_readme:
          name: dockerhub_readme_nexmo_oas_renderer
          context:
            - docker-credentials
            - dockerhub-readme-credentials
          docker_image: 'nexmo-oas-renderer'
          image_description: 'Customized nexmo-oas-renderer image that can visualize yaml api specs from a git repo'
          readme_path: 'nexmo-oas-renderer/README.md'
          requires:
            - nexmo_oas_renderer_arm
      - notify:
          context:
            - docker-credentials
            - slack-webhook
          requires:
            - nexmo_oas_renderer
            - graalvm
            - dockerhub_readme_graalvm
            - dockerhub_readme_nexmo_oas_renderer
  
  pr_check:
    jobs:
      - dry_run:
          name: dry_run_graalvm
          context:
            - docker-credentials
          <<: *pr_filter
          command_args: '--build-arg BASE_IMAGE_VERSION=ol8-java17-22.3.2 -f graalvm/Dockerfile .'
      - dry_run:
          name: dry_run_nexmo_oas_renderer
          context:
            - docker-credentials
          <<: *pr_filter
          command_args: 'nexmo-oas-renderer'
      - dry_run_arm:
          name: dry_run_graalvm_arm
          context:
            - docker-credentials
          <<: *pr_filter
          command_args: '--build-arg BASE_IMAGE_VERSION=ol8-java17-22.3.2 -f graalvm/Dockerfile .'
      - dry_run_arm:
          name: dry_run_nexmo_oas_renderer_arm
          context:
            - docker-credentials
          <<: *pr_filter
          command_args: 'nexmo-oas-renderer'